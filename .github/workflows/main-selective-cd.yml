name: CD Selectivo a Pacheco (Desde Main)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

jobs:
  deploy-login-service:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.commits[0].modified, 'backend/login-service/') ||
      contains(github.event.commits[0].added, 'backend/login-service/') ||
      contains(github.event.commits[0].removed, 'backend/login-service/')
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      # -- PASOS DE CONSTRUCCIÓN Y PUSH DE IMAGEN DEL LOGIN-SERVICE (EN RUNNER DE GITHUB ACTIONS) --
      - name: Build login-service image
        run: docker build -t ${{ secrets.DOCKER_USER }}/mis-servicios:login-service-latest ./backend/login-service

      - name: Login a Docker Hub (en Runner de GA)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push login-service image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USER }}/mis-servicios:login-service-latest

      # -- PASO DE DESPLIEGUE DEL LOGIN-SERVICE EN PACHECO VIA SSH (USANDO DOCKER COMPOSE) --
      - name: Desplegar Login Service en Pacheco via SSH
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Conectado a Pacheco. Desplegando Login Service con Docker Compose..."

            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

            DOCKER_COMPOSE_PATH="/home/sergiolara2101/proyecto-final-v1/docker-compose.yml"

            echo "Deteniendo y eliminando el servicio 'login_service' usando Docker Compose..."

            docker-compose -f $DOCKER_COMPOSE_PATH stop login_service || true
            docker-compose -f $DOCKER_COMPOSE_PATH rm -f login_service || true

            echo "Descargando la imagen más reciente de 'login_service' desde Docker Hub con Compose..."
            docker-compose -f $DOCKER_COMPOSE_PATH pull login_service

            echo "Levantando el servicio 'login_service' con Docker Compose en modo detached..."
            docker-compose -f $DOCKER_COMPOSE_PATH up -d login_service

            echo "Despliegue de Login Service completado. Verificando estado en Pacheco..."
            docker ps -f name=login_service
            echo "Logs recientes de login-service en Pacheco:"
            docker logs login_service --tail 20

  deploy-frontend:
    runs-on: ubuntu-latest
    # La condición 'if' asegura que este job se ejecute cuando haya cambios en el frontend o si se dispara manualmente
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.commits[0].modified, 'frontend/') ||
      contains(github.event.commits[0].added, 'frontend/') ||
      contains(github.event.commits[0].removed, 'frontend/')

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      # -- PASOS DE CONSTRUCCIÓN Y PUSH DE IMAGEN DEL FRONTEND (EN RUNNER DE GITHUB ACTIONS) --
      - name: Build frontend image
        # Ruta correcta a tu Dockerfile del frontend
        run: docker build -t ${{ secrets.DOCKER_USER }}/mis-servicios:frontend-service-latest ./frontend

      - name: Login a Docker Hub (en Runner de GA)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push frontend image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USER }}/mis-servicios:frontend-service-latest

      # -- PASO DE DESPLIEGUE DEL FRONTEND EN PACHECO VIA SSH (USANDO DOCKER COMPOSE) --
      - name: Desplegar Frontend en Pacheco via SSH
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Conectado a Pacheco. Desplegando Frontend con Docker Compose..."

            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

            DOCKER_COMPOSE_PATH="/home/sergiolara2101/proyecto-final-v1/docker-compose.yml"

            echo "Deteniendo y eliminando el servicio 'angular_frontend' usando Docker Compose..."

            docker-compose -f $DOCKER_COMPOSE_PATH stop angular_frontend || true
            docker-compose -f $DOCKER_COMPOSE_PATH rm -f angular_frontend || true

            echo "Descargando la imagen más reciente de 'angular_frontend' desde Docker Hub con Compose..."
            docker-compose -f $DOCKER_COMPOSE_PATH pull angular_frontend

            echo "Levantando el servicio 'angular_frontend' con Docker Compose en modo detached..."
            docker-compose -f $DOCKER_COMPOSE_PATH up -d angular_frontend

            echo "Despliegue de Frontend completado. Verificando estado en Pacheco..."
            docker ps -f name=angular_frontend
            echo "Logs recientes de frontend en Pacheco:"
            docker logs angular_frontend --tail 20