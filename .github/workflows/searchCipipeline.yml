name: test-searchCipipeline

run-name: Test N.¬∫${{ github.run_number }} hecho por ${{ github.actor }}
on:
  push:
    branches:
      - BuscarPersonas

jobs:
  #hola
  # Tests unitarios  de Backend-Service
  unit-test-searchp-service:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/searchp-service
    steps:
      - name: üíªCheckout
        uses: actions/checkout@v3

      - name: üõ†Ô∏èInstalar dependecias
        run: npm install

      - name: üëæTest
        run: npm test

  # Pruebas de integraci√≥n con todos los servicios dockerizados
  docker-up-test:
    runs-on: ubuntu-latest
    needs: unit-test-searchp-service

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Levantar contenedores en segundo plano
        run: docker compose up -d

      - name: Esperar a que MySQL est√© listo
        run: |
          for i in {1..15}; do
            if docker exec mysql_db mysqladmin ping -uroot -p1234 --silent; then
              echo "‚úÖ MySQL listo"
              break
            fi
            echo "‚è≥ Esperando a MySQL..."
            sleep 2
          done

      - name: Esperar logs de searchp-service con conexi√≥n establecida
        run: |
          for i in {1..15}; do
            logs=$(docker logs searchp-service 2>&1)
            if echo "$logs" | grep -q "Conexi√≥n establecida con la base de datos"; then
              echo "‚úÖ searchp-service conectado a la base de datos"
              exit 0
            fi
            echo "‚è≥ Esperando conexi√≥n desde searchp-service..."
            sleep 2
          done
          echo "‚ùå No se detect√≥ conexi√≥n en los logs"
          docker compose logs
          exit 1

      - name: Ejecutar pruebas de integraci√≥n
        run: |
          docker exec searchp-service npm install
          docker exec searchp-service npm test:integration

      - name: Finalizar contenedores
        run: docker compose down